body {
  margin: 0;
  text-align: center;
  /* centers everything in the parent element that doesn't have a pre-set width value, essentially the width is set to default (100% of screen)*/
  font-family: 'Merriweather', serif;
}

h1 {
  margin: 50px auto 0 auto;
  /* used to center element if the width is preset to a value like the h1 in this case */
  padding-top: 50px;
  margin-bottom: 0;
  font-weight: 900;
  font-size: 6rem;  /* 16px = 100% = 1 em   -->  USE REM because it is the most adaptable and most reliable for FONT SIZES */
  font-family: 'Sacramento', cursive;
  color: #66BFBF;
}

h2 {
  font-family: 'Montserrat', sans-serif;
}

h3 {
  font-family: 'Montserrat', sans-serif;
  color:#11999E;
}

a {
  color: #11999E;
}

.top-container {
  background-color: #E4F9F5;
  padding-top: 100px;
}

.middle-container {

}

.bottom-container {

}

.bottom-cloud {
  position: absolute;
}

.intro-p {
  font-size: 2rem;
  font-weight: normal;
  color: #66BFBF;
}

.top-cloud {
  position: absolute;
  left: 950px;
}

.skill-row {
  width: 50%;
  margin: 100px auto;
  text-align: left;
  line-height: 2;
}

.code-img {
  width: 25%;
  float: left;
  margin-right: 30px;
}

/*
CSS

- Display Property = inline ( you can't change the width ), block (take up whole witdth of screen), inline-block (best of both worlds), None (gets rid of element)

- Visibility can be used to disapper an element without affecting its position

- Position: static (default),
            relative
              - relative to how it would have been postiioned if static. Any changes to element doesn't affect other elements around it.),
            absolute
              - positioning element relative to its parent.
            fixed
              - element will stay in its current position even when you are scrolling through the website.

- Coordinates: top, bottom, left, right

- Floating:
      -
*/
